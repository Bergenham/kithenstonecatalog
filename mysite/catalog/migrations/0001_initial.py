# Generated by Django 5.1.7 on 2025-07-18 16:59

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Stone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_stone', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Название камня')),
                ('abt_prise', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(9999999.99)], verbose_name='Примерная цена')),
                ('priview_img', models.ImageField(upload_to='stones/previews/', verbose_name='Превью изображение')),
                ('material', models.CharField(choices=[('quartz', 'Кварцевый камень'), ('acryl', 'Акриловый камень'), ('natural', 'Натуральный камень'), ('ceramic', 'Керамический камень')], max_length=50, verbose_name='Материал камня')),
                ('country', models.CharField(choices=[('quartz', 'Кварцевый камень')], max_length=50, verbose_name='Страна изготовления')),
                ('thickness', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='Толщина (мм)')),
                ('article', models.PositiveIntegerField(unique=True, verbose_name='Артикул')),
                ('about_brand', models.TextField(verbose_name='О бренде')),
                ('archive', models.BooleanField(default=False, verbose_name='В архиве')),
            ],
        ),
        migrations.CreateModel(
            name='AcrylicStone',
            fields=[
                ('stone_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.stone')),
                ('brand_stone', models.CharField(choices=[('acryl_b', 'AcrylBest'), ('poly_r', 'PolyRock')], max_length=50, verbose_name='Бренд')),
                ('color', models.CharField(choices=[('ocean', 'Океан'), ('lava', 'Лава')], max_length=50, verbose_name='Цвет')),
                ('texture', models.CharField(choices=[('acryl_marble', 'Мраморный'), ('solid', 'Однородная')], max_length=50, verbose_name='Текстура')),
                ('faktura', models.CharField(choices=[('silky', 'Шелковистая'), ('pearl', 'Жемчужная')], max_length=50, verbose_name='Фактура')),
                ('link_serf', models.CharField(choices=[('a_cert.pdf', 'Сертификат акрила'), ('eco.pdf', 'Эко-сертификат')], max_length=50, verbose_name='Ссылка на сертификаты')),
            ],
            options={
                'verbose_name': 'Акриловый камень',
                'verbose_name_plural': 'Акриловые камни',
            },
            bases=('catalog.stone',),
        ),
        migrations.CreateModel(
            name='CeramicsStone',
            fields=[
                ('stone_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.stone')),
                ('brand_stone', models.CharField(choices=[('ceram_p', 'CeramPro'), ('tile_m', 'TileMaster')], max_length=50, verbose_name='Бренд')),
                ('color', models.CharField(choices=[('graphite', 'Графитовый'), ('ivory', 'Слоновая кость')], max_length=50, verbose_name='Цвет')),
                ('texture', models.CharField(choices=[('geometric', 'Геометрическая'), ('concrete', 'Бетон')], max_length=50, verbose_name='Текстура')),
                ('faktura', models.CharField(choices=[('glassy', 'Стекловидная'), ('rustic', 'Рустикальная')], max_length=50, verbose_name='Фактура')),
                ('link_serf', models.CharField(choices=[('ceram_cert.pdf', 'Сертификат керамики'), ('heat_res.pdf', 'Термостойкость')], max_length=50, verbose_name='Ссылка на сертификаты')),
            ],
            options={
                'verbose_name': 'Керамический камень',
                'verbose_name_plural': 'Керамические камни',
            },
            bases=('catalog.stone',),
        ),
        migrations.CreateModel(
            name='NaturalStone',
            fields=[
                ('stone_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.stone')),
                ('brand_stone', models.CharField(choices=[('n_stone', 'NatureStone'), ('m_gems', 'MountainGems')], max_length=50, verbose_name='Бренд')),
                ('color', models.CharField(choices=[('forest', 'Лесной'), ('sandstone', 'Песчаник')], max_length=50, verbose_name='Цвет')),
                ('texture', models.CharField(choices=[('cracked', 'Трещиноватая'), ('layered', 'Слоистая')], max_length=50, verbose_name='Текстура')),
                ('faktura', models.CharField(choices=[('rocky', 'Скальная'), ('aged', 'Состаренная')], max_length=50, verbose_name='Фактура')),
                ('link_serf', models.CharField(choices=[('nat_cert.pdf', 'Сертификат природного камня'), ('origin.pdf', 'Сертификат происхождения')], max_length=50, verbose_name='Ссылка на сертификаты')),
            ],
            options={
                'verbose_name': 'Природный камень',
                'verbose_name_plural': 'Природные камни',
            },
            bases=('catalog.stone',),
        ),
        migrations.CreateModel(
            name='QuartzStone',
            fields=[
                ('stone_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='catalog.stone')),
                ('brand_stone', models.CharField(choices=[('caesarstone', 'caesarstone'), ('technistone', 'Technistone')], max_length=50, verbose_name='Бренд')),
                ('color', models.CharField(choices=[('beige', 'Бежевый'), ('white', 'Белый'), ('brown', 'Коричневый'), ('grey', 'Серый'), ('dark-grey', 'Темно-серый'), ('black', 'Черный')], max_length=50, verbose_name='Цвет')),
                ('texture', models.CharField(choices=[('Concrete', 'Бетон'), ('Marble', 'Мраморная'), ('Single-color', 'Однотонная'), ('Terrazzo', 'Тераццо')], max_length=50, verbose_name='Текстура')),
                ('faktura', models.CharField(choices=[('honed', 'Матовая'), ('polished', 'Полированная')], max_length=50, verbose_name='Фактура')),
                ('link_serf', models.CharField(choices=[('q_cert.pdf', 'Сертификат кварца'), ('q_safe.pdf', 'Сертификат безопасности')], max_length=50, verbose_name='Ссылка на сертификаты')),
            ],
            options={
                'verbose_name': 'Кварцевый камень',
                'verbose_name_plural': 'Кварцевые камни',
            },
            bases=('catalog.stone',),
        ),
        migrations.CreateModel(
            name='StoneImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='stones/examples/', verbose_name='Пример изображения')),
                ('stone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='example_images', to='catalog.stone', verbose_name='Камень')),
            ],
            options={
                'verbose_name': 'Пример изображения',
                'verbose_name_plural': 'Примеры изображений',
            },
        ),
    ]
